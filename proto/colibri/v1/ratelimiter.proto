// Copyright 2021 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/scionproto/scion/go/pkg/proto/colibri";

package proto.colibri.v1;


service RateLimiterService {
    rpc AddRateLimit(AddRateLimitRequest) returns (Success) {}
    rpc SetBurstSizeAndRate(SetBurstSizeAndRateRequest) returns (Success) {}
    rpc GetBurstSizeAndRate(GetterForIdentifierRequest) returns (GetBurstSizeAndRateResponse) {}
    rpc GetBurstSize(GetterForIdentifierRequest) returns (GetBurstSizeResponse) {}
    rpc SetBurstSize(SetBurstSizeRequest) returns (Success) {}
    rpc GetRate(GetterForIdentifierRequest) returns (GetRateResponse) {}
    rpc SetRate(SetRateRequest) returns (Success) {}
    

}

// /////////////////////////////////////////////////

message AddRateLimitRequest {
    string identifier = 1;
    double rate = 2;
    int64 cbs = 3;
}

message Success {
}

message SetBurstSizeRequest {
    string identifier = 1;
    int64 cbs = 2;
}

message SetRateRequest {
    string identifier = 1;
    double rate = 2;
}

message SetBurstSizeAndRateRequest {
    string identifier = 1;
    int64 cbs = 2;
    double rate = 3;
}

message GetterForIdentifierRequest {
    string identifier = 1;
}

message GetBurstSizeResponse {
    int64 cbs = 1;
}

message GetRateResponse {
    double rate = 1;
}

message GetBurstSizeAndRateResponse {
    int64 cbs = 1;
    double rate = 2;
}