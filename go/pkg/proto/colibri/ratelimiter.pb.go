// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.3
// source: proto/colibri/v1/ratelimiter.proto

package colibri

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddRateLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Rate    float64 `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Cbs     int64   `protobuf:"varint,3,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Ingress int32   `protobuf:"varint,4,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Egress  int32   `protobuf:"varint,5,opt,name=egress,proto3" json:"egress,omitempty"`
}

func (x *AddRateLimitRequest) Reset() {
	*x = AddRateLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRateLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRateLimitRequest) ProtoMessage() {}

func (x *AddRateLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRateLimitRequest.ProtoReflect.Descriptor instead.
func (*AddRateLimitRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_ratelimiter_proto_rawDescGZIP(), []int{0}
}

func (x *AddRateLimitRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddRateLimitRequest) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *AddRateLimitRequest) GetCbs() int64 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *AddRateLimitRequest) GetIngress() int32 {
	if x != nil {
		return x.Ingress
	}
	return 0
}

func (x *AddRateLimitRequest) GetEgress() int32 {
	if x != nil {
		return x.Egress
	}
	return 0
}

type Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Success) Reset() {
	*x = Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_ratelimiter_proto_rawDescGZIP(), []int{1}
}

type SetBurstSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Cbs     int64  `protobuf:"varint,2,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Ingress int32  `protobuf:"varint,3,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Egress  int32  `protobuf:"varint,4,opt,name=egress,proto3" json:"egress,omitempty"`
}

func (x *SetBurstSizeRequest) Reset() {
	*x = SetBurstSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBurstSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBurstSizeRequest) ProtoMessage() {}

func (x *SetBurstSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBurstSizeRequest.ProtoReflect.Descriptor instead.
func (*SetBurstSizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_ratelimiter_proto_rawDescGZIP(), []int{2}
}

func (x *SetBurstSizeRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SetBurstSizeRequest) GetCbs() int64 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *SetBurstSizeRequest) GetIngress() int32 {
	if x != nil {
		return x.Ingress
	}
	return 0
}

func (x *SetBurstSizeRequest) GetEgress() int32 {
	if x != nil {
		return x.Egress
	}
	return 0
}

type SetRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Rate    float64 `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Ingress int32   `protobuf:"varint,3,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Egress  int32   `protobuf:"varint,4,opt,name=egress,proto3" json:"egress,omitempty"`
}

func (x *SetRateRequest) Reset() {
	*x = SetRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRateRequest) ProtoMessage() {}

func (x *SetRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRateRequest.ProtoReflect.Descriptor instead.
func (*SetRateRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_ratelimiter_proto_rawDescGZIP(), []int{3}
}

func (x *SetRateRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SetRateRequest) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *SetRateRequest) GetIngress() int32 {
	if x != nil {
		return x.Ingress
	}
	return 0
}

func (x *SetRateRequest) GetEgress() int32 {
	if x != nil {
		return x.Egress
	}
	return 0
}

type SetBurstSizeAndRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Cbs     int64   `protobuf:"varint,2,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Rate    float64 `protobuf:"fixed64,3,opt,name=rate,proto3" json:"rate,omitempty"`
	Ingress int32   `protobuf:"varint,4,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Egress  int32   `protobuf:"varint,5,opt,name=egress,proto3" json:"egress,omitempty"`
}

func (x *SetBurstSizeAndRateRequest) Reset() {
	*x = SetBurstSizeAndRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBurstSizeAndRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBurstSizeAndRateRequest) ProtoMessage() {}

func (x *SetBurstSizeAndRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_ratelimiter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBurstSizeAndRateRequest.ProtoReflect.Descriptor instead.
func (*SetBurstSizeAndRateRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_ratelimiter_proto_rawDescGZIP(), []int{4}
}

func (x *SetBurstSizeAndRateRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SetBurstSizeAndRateRequest) GetCbs() int64 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *SetBurstSizeAndRateRequest) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *SetBurstSizeAndRateRequest) GetIngress() int32 {
	if x != nil {
		return x.Ingress
	}
	return 0
}

func (x *SetBurstSizeAndRateRequest) GetEgress() int32 {
	if x != nil {
		return x.Egress
	}
	return 0
}

var File_proto_colibri_v1_ratelimiter_proto protoreflect.FileDescriptor

var file_proto_colibri_v1_ratelimiter_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x09, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x73, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x42, 0x75, 0x72, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x70, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x42, 0x75, 0x72, 0x73, 0x74, 0x53,
	0x69, 0x7a, 0x65, 0x41, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x32, 0xe8, 0x02, 0x0a, 0x12, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x13, 0x53, 0x65, 0x74, 0x42, 0x75, 0x72, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x41, 0x6e,
	0x64, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x75, 0x72, 0x73,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x41, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x42, 0x75, 0x72, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x75, 0x72, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x42, 0x32,
	0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x69,
	0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_colibri_v1_ratelimiter_proto_rawDescOnce sync.Once
	file_proto_colibri_v1_ratelimiter_proto_rawDescData = file_proto_colibri_v1_ratelimiter_proto_rawDesc
)

func file_proto_colibri_v1_ratelimiter_proto_rawDescGZIP() []byte {
	file_proto_colibri_v1_ratelimiter_proto_rawDescOnce.Do(func() {
		file_proto_colibri_v1_ratelimiter_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_colibri_v1_ratelimiter_proto_rawDescData)
	})
	return file_proto_colibri_v1_ratelimiter_proto_rawDescData
}

var file_proto_colibri_v1_ratelimiter_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_colibri_v1_ratelimiter_proto_goTypes = []interface{}{
	(*AddRateLimitRequest)(nil),        // 0: proto.colibri.v1.AddRateLimitRequest
	(*Success)(nil),                    // 1: proto.colibri.v1.Success
	(*SetBurstSizeRequest)(nil),        // 2: proto.colibri.v1.SetBurstSizeRequest
	(*SetRateRequest)(nil),             // 3: proto.colibri.v1.SetRateRequest
	(*SetBurstSizeAndRateRequest)(nil), // 4: proto.colibri.v1.SetBurstSizeAndRateRequest
}
var file_proto_colibri_v1_ratelimiter_proto_depIdxs = []int32{
	0, // 0: proto.colibri.v1.RateLimiterService.AddRateLimit:input_type -> proto.colibri.v1.AddRateLimitRequest
	4, // 1: proto.colibri.v1.RateLimiterService.SetBurstSizeAndRate:input_type -> proto.colibri.v1.SetBurstSizeAndRateRequest
	2, // 2: proto.colibri.v1.RateLimiterService.SetBurstSize:input_type -> proto.colibri.v1.SetBurstSizeRequest
	3, // 3: proto.colibri.v1.RateLimiterService.SetRate:input_type -> proto.colibri.v1.SetRateRequest
	1, // 4: proto.colibri.v1.RateLimiterService.AddRateLimit:output_type -> proto.colibri.v1.Success
	1, // 5: proto.colibri.v1.RateLimiterService.SetBurstSizeAndRate:output_type -> proto.colibri.v1.Success
	1, // 6: proto.colibri.v1.RateLimiterService.SetBurstSize:output_type -> proto.colibri.v1.Success
	1, // 7: proto.colibri.v1.RateLimiterService.SetRate:output_type -> proto.colibri.v1.Success
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_colibri_v1_ratelimiter_proto_init() }
func file_proto_colibri_v1_ratelimiter_proto_init() {
	if File_proto_colibri_v1_ratelimiter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_colibri_v1_ratelimiter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRateLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_ratelimiter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_ratelimiter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBurstSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_ratelimiter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_ratelimiter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBurstSizeAndRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_colibri_v1_ratelimiter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_colibri_v1_ratelimiter_proto_goTypes,
		DependencyIndexes: file_proto_colibri_v1_ratelimiter_proto_depIdxs,
		MessageInfos:      file_proto_colibri_v1_ratelimiter_proto_msgTypes,
	}.Build()
	File_proto_colibri_v1_ratelimiter_proto = out.File
	file_proto_colibri_v1_ratelimiter_proto_rawDesc = nil
	file_proto_colibri_v1_ratelimiter_proto_goTypes = nil
	file_proto_colibri_v1_ratelimiter_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RateLimiterServiceClient is the client API for RateLimiterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RateLimiterServiceClient interface {
	AddRateLimit(ctx context.Context, in *AddRateLimitRequest, opts ...grpc.CallOption) (*Success, error)
	SetBurstSizeAndRate(ctx context.Context, in *SetBurstSizeAndRateRequest, opts ...grpc.CallOption) (*Success, error)
	SetBurstSize(ctx context.Context, in *SetBurstSizeRequest, opts ...grpc.CallOption) (*Success, error)
	SetRate(ctx context.Context, in *SetRateRequest, opts ...grpc.CallOption) (*Success, error)
}

type rateLimiterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRateLimiterServiceClient(cc grpc.ClientConnInterface) RateLimiterServiceClient {
	return &rateLimiterServiceClient{cc}
}

func (c *rateLimiterServiceClient) AddRateLimit(ctx context.Context, in *AddRateLimitRequest, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.RateLimiterService/AddRateLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rateLimiterServiceClient) SetBurstSizeAndRate(ctx context.Context, in *SetBurstSizeAndRateRequest, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.RateLimiterService/SetBurstSizeAndRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rateLimiterServiceClient) SetBurstSize(ctx context.Context, in *SetBurstSizeRequest, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.RateLimiterService/SetBurstSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rateLimiterServiceClient) SetRate(ctx context.Context, in *SetRateRequest, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.RateLimiterService/SetRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RateLimiterServiceServer is the server API for RateLimiterService service.
type RateLimiterServiceServer interface {
	AddRateLimit(context.Context, *AddRateLimitRequest) (*Success, error)
	SetBurstSizeAndRate(context.Context, *SetBurstSizeAndRateRequest) (*Success, error)
	SetBurstSize(context.Context, *SetBurstSizeRequest) (*Success, error)
	SetRate(context.Context, *SetRateRequest) (*Success, error)
}

// UnimplementedRateLimiterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRateLimiterServiceServer struct {
}

func (*UnimplementedRateLimiterServiceServer) AddRateLimit(context.Context, *AddRateLimitRequest) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRateLimit not implemented")
}
func (*UnimplementedRateLimiterServiceServer) SetBurstSizeAndRate(context.Context, *SetBurstSizeAndRateRequest) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBurstSizeAndRate not implemented")
}
func (*UnimplementedRateLimiterServiceServer) SetBurstSize(context.Context, *SetBurstSizeRequest) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBurstSize not implemented")
}
func (*UnimplementedRateLimiterServiceServer) SetRate(context.Context, *SetRateRequest) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRate not implemented")
}

func RegisterRateLimiterServiceServer(s *grpc.Server, srv RateLimiterServiceServer) {
	s.RegisterService(&_RateLimiterService_serviceDesc, srv)
}

func _RateLimiterService_AddRateLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRateLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateLimiterServiceServer).AddRateLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.RateLimiterService/AddRateLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateLimiterServiceServer).AddRateLimit(ctx, req.(*AddRateLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RateLimiterService_SetBurstSizeAndRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBurstSizeAndRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateLimiterServiceServer).SetBurstSizeAndRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.RateLimiterService/SetBurstSizeAndRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateLimiterServiceServer).SetBurstSizeAndRate(ctx, req.(*SetBurstSizeAndRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RateLimiterService_SetBurstSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBurstSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateLimiterServiceServer).SetBurstSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.RateLimiterService/SetBurstSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateLimiterServiceServer).SetBurstSize(ctx, req.(*SetBurstSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RateLimiterService_SetRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateLimiterServiceServer).SetRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.RateLimiterService/SetRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateLimiterServiceServer).SetRate(ctx, req.(*SetRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RateLimiterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.colibri.v1.RateLimiterService",
	HandlerType: (*RateLimiterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddRateLimit",
			Handler:    _RateLimiterService_AddRateLimit_Handler,
		},
		{
			MethodName: "SetBurstSizeAndRate",
			Handler:    _RateLimiterService_SetBurstSizeAndRate_Handler,
		},
		{
			MethodName: "SetBurstSize",
			Handler:    _RateLimiterService_SetBurstSize_Handler,
		},
		{
			MethodName: "SetRate",
			Handler:    _RateLimiterService_SetRate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/colibri/v1/ratelimiter.proto",
}
